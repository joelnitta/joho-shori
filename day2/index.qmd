---
format:
  revealjs:
    incremental: false
    css: ../styles.css
execute: 
  echo: true
---

# 第２回：R入門（２）

<https://data-science-chiba-2024.github.io/day2/>

## スケジュール {.smaller}

1. ガイダンス、RとRStudioの紹介、R入門（１）
2. **R入門（２）**
3. プロジェクトの整理とデータの読み込み
4. データの整理（１）
5. データの整理（２）
6. データの可視化（１）
7. データの可視化（２）
8. オンデマンド講義とe-learning

## クイズ

![](../images/joho2024-qr-code.png)

あるいは、[gosocrative.com](https://gosocrative.com) で joho2024を入力

## コメントについて

<!-- FIXME: remove this section after lecture -->

- `#`の後に書いた文は「コメント」です

- Rはコメントを無視するので、何を書いてもエラーになりません

- 自分用のメモとして使う
  - 日本語で書いても大丈夫

```{r}
# これはコメントです
# 3 % 9
3 * 9
```

## ベクトルについて

- 今までは、数を一個ずつ扱ってきた（`4 + 5`など）

- でも、R では一気に複数の数（など）を扱うことができる

- 例えば、1 から 10 までの数：

```{r}
1:10
```

- このようなデータの集まりを**「ベクトル」**と呼ぶ

## ベクトルについて

- 1 から 10 までの数をオブジェクトに保存すれば、今度はそれを使って様々な計算ができる。

- 例えば、一気に全部の値を２で割る：

```{r}
x <- 1:10

x / 2
```

## ベクトルについて

- もう一つのベクトルの作り方がある：`c`
  - `c`は **combine**（結合する）という意味

```{r}
c(1, 2, 3)
```

## チャレンジ

- 40から50までのベクトルを作る

- 40, 42, 46を含むベクトルを作る

## データ型について

- 今までは数（数字）しか扱ってこなかったが、R には他のデータの種類もある
  - **データ型**と呼ぶ

- 文字データ:

```{r}
c("ramen", "gyoza", "edamame")
```

- 文字は必ず`"`で囲まないといけない

## データ型について

- 論理データ：

```{r}
c(TRUE, FALSE)
```

- 

## 関数とは

何かの値（インプット）を受けて、処理して、計算結果（アウトプット）を返すもの

::: center-x

<img src="https://manamina.valuesccg.com/uploads/content/image/12292/__.png" alt="drawing" height="100">

::: small
<https://manamina.valuesccg.com/articles/756>
:::

:::

## 関数とは

関数の書き方：

- 関数名(引数)

例えば

```{r}
round(3.1415, digits = 1)
```

## 関数とは

関数の使い方を確認したい時は`?関数名`と打って、ヘルプファイルを参照すれば良い

```{r}
#| eval: false
?round
```

## パッケージとは

- Rパッケージとは、Rが出来ることを大幅に増やす「追加」のソフト（関数のまとまり）
  - 現在、**２万**近くのパッケージがある！

## パッケージのインストール

Rパッケージのインストールを行うには、`install.packages()`を使う：

```{r}
#| label: install
#| echo: true
#| eval: false
install.packages("ggplot2")
```

一回インストールしたら、次回からはしなくて良いので、これはコードとして保存しない

## パッケージのロード

- パッケージをインストールしたら、使える状態にするにはロードすることが必要
  - インストールは一回でいい
  - ロードは毎回必要

`library()`関数でロードする：

```{r}
library(ggplot2)
```

## tidyverse

- `tidyverse`はデータサイエンス用パッケー**ジの集まり**のパッケージ
  - `ggplot2`（可視化）
  - `dplyr`（データの整理）
  - `stringr`（文字データを扱う）
  - など

これからよく使うので、インストールしましょう。

```{r}
#| label: install-tidyverse
#| echo: true
#| eval: false
install.packages("tidyverse")
```

## `install.packages()`と`library()`の違い

- `install.packages()`は一回だけで良い（パソコンにパッケージをダウンロードする）

- `library()`はRを使う毎にしないといけない（パッケージを今回のRのセッションで使えるようにする）
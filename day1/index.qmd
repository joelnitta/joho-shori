---
format:
  revealjs:
    incremental: false
    css: ../styles.css
execute: 
  echo: true
---

# 第１回：ガイダンス、RとRStudioの紹介

<https://joelnitta.github.io/joho-shori/day1/>

# ガイダンス

## ニッタ ジョエル

:::: {.columns}

::: {.column}
- 研究テーマその１：**シダ植物の進化と生態学**
  - [Biodiversity and Japan](https://syllabus.gs.chiba-u.jp/2024/401001000000000/G15N945001/en_US)

- 研究テーマその２：**データサイエンス**用ソフトの開発
  - [Reproducible Data Analysis](https://syllabus.gs.chiba-u.jp/2024/101101101076000/Z011531301/en_US)

- <https://www.joelnitta.com>
:::

::: {.column}
![](https://github.com/joelnitta/joelnitta-site/blob/master/static/media/headers/research_img2.jpg?raw=true){fig-alt="Image of Joel Nitta in field" height="450"}
:::

::::

## スケジュール {.smaller}

1. **ガイダンス、RとRStudioの紹介、R入門（１）**
2. R入門（２）
3. プロジェクトの整理とデータの読み込み
4. データの整理（１）
5. データの整理（２）
6. データの可視化（１）
7. データの可視化（２）、AIによるプログラミング
8. オンデマンド講義とe-learning

## Moodle

基本情報や宿題は全部Moodle「2025-情報処理演習（T4・火3）」に掲載される。

常に確認してください。

<https://moodle.gs.chiba-u.jp/moodle/course/view.php?id=44299>

## オフィスアワー

予約制（<joelnitta@chiba-u.jp>までメールにて連絡ください）。対面・非対面での相談、ご希望とご都合に合わせて対応します。

## 教科書

:::: {.columns}

::: {.column width="70%"}
- R for Data Science (2nd edition)
  - 英語版はオンラインで無料公開 [https://r4ds.hadley.nz/](https://r4ds.hadley.nz/)
  - 日本語版は[アマゾン](https://www.amazon.co.jp/R%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9-%E7%AC%AC2%E7%89%88-Hadley-Wickham/dp/4814400772/ref=sr_1_2?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&crid=38I6KDKKIV16O&dib=eyJ2IjoiMSJ9.GGF0L1q-Erx9HU27rscRki94Ao9GXZ5y2HVFdEev4zxG1OTnzPpbg-mjmrzdKgeFzt1hC_NBl3doKyAasQaPGTZCi-OU_aKSZ92B_Jb5wmua9KFy3v5UPz0PQAMonejSVV660k3GOmLZo2il--e6dr0xcuhnABRob_ZQ_SP4i89KX-EtaiytgmFSsGyZfjLCHe4mhXgpnc3kl4yXZSFvx-WwDLOGM4BBrxDULLWvVHbiFXTbdFKKoyTHnGHMo2b-2gH-pJtvNNrbvyfapYofa71PdrY0p6HPWpZ2_HI2Gn0.jtDTN8tC0wccGCgPGCZmNMKsX0PRN3vXFMTo4JbMnWw&dib_tag=se&keywords=R+for+Data+Science+%282nd+Edition%29&qid=1725332552&sprefix=r+for+data+science+2nd+edition+%2Caps%2C255&sr=8-2)などで購入可能（千葉大学図書館でも閲覧可能） 
  - 本授業では本書の全てはカバーできません 
  - 課題範囲（毎週のリーディング）のみPDFをMoodleで配布予定
:::

::: {.column width="30%"}
![](https://a.media-amazon.com/images/I/816et44SMFL._SL1500_.jpg){height=400px}
:::

::::

## リーディング {.smaller}

PDFをMoodleからダウンロードして、毎週のリーディングを講義の**前に**読んでください。

- 今週：[「はじめに」](https://moodle.gs.chiba-u.jp/moodle/pluginfile.php/2417197/mod_resource/content/2/r4ds-intro.pdf)
  - 「何を学ぶのか」（vi-vii）
  - 「準備するもの」（ix-xi）

- 来週：[２章「ワークフロー：基本」（27~32）](https://moodle.gs.chiba-u.jp/moodle/pluginfile.php/2417198/mod_resource/content/3/r4ds-chapter-2.pdf)

他のリーディングは随時お知らせする

## 課題と評価

- 宿題（50%）
  - ブラウザで受ける（チュートリアル式）
  - Moodleで提出
  - 締め切り：次の週の授業まで
    - 第1回目の宿題の締め切りは **2025年10月14日 12:50**
  - 全7回

## 課題と評価

- クイズ（50%）
  - 授業の最初の10分間\*
  - Moodleで受ける
    - クイズ中、Moodle 以外は使用禁止
  - 5問ほど
  - 全7回

## 欠席ポリシー

- 出席は取りません　

- 緊急事態以外の理由による遅れた提出・クイズの再実施は**認めません**

- そのかわり、成績にはもっとも低い点数の宿題・クイズ一件分は使いません

## オンデマンド回：生成AIの基本

- Moodle -> [「オンデマンド回」](https://moodle.gs.chiba-u.jp/moodle/course/view.php?id=44299#section-1)
  - オンデマンド講義（[YouTubeからアケセス](https://www.youtube.com/watch?v=ok837FBoEI8)、10分）
  - 中部大学の「[ChatGPTについて](https://edu.isc.chubu.ac.jp/hsuzuki/iip/DataScience/ChatGPT/chatgpt.html)」の資料
  - クイズ
- **締め切り：2025年11月17日 23:59** （第７回の前日までに）

## 倫理教育e-learning 

- Moodle -> [「倫理教育e-learning 」](https://moodle.gs.chiba-u.jp/moodle/course/view.php?id=44299#section-9)
  - 「登録および受講方法」のPDFを読んでください
  - 自分でMoodleの倫理教育e-learning授業を登録して、受講してください
  - 資料を読んでから、クイズ（二つ）を受けてください
- **締め切り：2025年11月20日 23:59**

# データサイエンスとは？

## データサイエンスとは？

- **データ**から**洞察**（インサイト）を得ること

![](https://digital4africa.com/wp-content/uploads/2018/02/Data-D4A.png)

::: {.aside}
<https://digital4africa.com/whats-big-deal-data/>
:::

## データサイエンスの特徴

- 大量のデータを扱う（**「ビッグデータ」**）
  - **統計学**を使う
- **プログラミング**を使う（python、R、など）
- **様々な用途がある**（学術研究、治療、産業、など）

. . .

**[理系のみの話ではない]{.medlarge}**

## 文系のデータサイエンス

Digital Humanities

![](https://s3.amazonaws.com/libapps/accounts/31778/images/IntroToLDA.png)

## なぜデータサイエンスを勉強するのか？

- 毎日の生活のため
- キャリアのため
- 今後の授業の基礎になるため
  - シラバス検索の結果（フリーワード）
    - 「データサイエンス」：84件
    - 「プログラミング」：167件

---

![](../images/syllabus_search.png)

---

![](../images/syllabus_search_programming.png)

## 本授業の目的

- 以下のことができるようになる：
  - Rプログラミング言語の基本的な操作
  - データの読み込み
  - データの整理
  - データの可視化

これらのスキルを**他の授業で使えるようになること**

## データ解析の循環

![](../images/data-sci-cycle.png)

## データ解析の循環

![](../images/data-sci-cycle-annotated.png)

# 再現性とは？

<!-- another activity, similar to the first: discuss "what is reproducibility?"
-->

## 再現性とは？

- 他の人があなたの解析を**再度行って、同じ結果**を<br>得ること

![](../images/repro-analysis.png)

::: {.aside}
<https://jhudatascience.org/Reproducibility_in_Cancer_Informatics/defining-reproducibility.html>
:::

## 再現性とは？

:::: {.columns}

::: {.column width="40%"}
- 再現性がなければ、「サイエンス」にはならない！
:::

::: {.column width="60%"}

![](https://www.drugdesigntech.com/wp-content/uploads/2017/03/reproducibility.jpg){width=500px}
:::

::::

::: {.aside}
<https://www.drugdesigntech.com/how-maximize-the-reproducibility-of-your-research/>
:::

## 再現可能にするには・・

- **コード**が必要
  - 自分が何をやったのか、記録が残る
  - 将来、同じ解析ができる

- コードとして残らない方法はよろしくない

## 本授業では、Rを使用

:::: {.columns}

::: {.column width="50%"}
- 無料
- データ解析の機能が豊富
- 多様なニーズに応えるパッケージ
- コミュニティ
:::

::: {.column width="50%"}
![](../images/r_uses_crop.png)

[<https://www.linkedin.com/pulse/why-r-4-reason-learn-programming-language-business-corporate>]{.tiny}
:::

::::

## 他のプログラミング言語もある

- 特に、PythonはRと同様（あるいはもっと）人気がある
- 大事なのは、**プログラミングの基本**を押さえること

## 「AIにやらせればいいんじゃないの？」

- AI（ChatGPTなど）はコードを書くのが得意なことが多いが…

- **何を求める**のかを正確に伝えるには、基本的な知識が必要

- **うまくいかないとき**に自分で対処するためにも、基礎が大切

. . .

本授業では、**AIによるプログラミングができるように**、まずは**基本を勉強する**

## RとRStudioについて

:::: {.columns}

::: {.column width="50%"}
- Rとは「R Project for Statistical Computing」という組織が提供しているオープンソースプログラミング言語
:::

::: {.column width="50%"}
![](https://www.r-project.org/logo/Rlogo.svg)
:::

::::

## RとRStudioについて

:::: {.columns}

::: {.column width="50%"}
- Rのコードを書く・実行する最適なソフト（「Integrated Development Environment」 = IDE）
- 基本的なプランは無料
- RStudioなしでもRは一応使えるけど、不便
:::

::: {.column width="50%"}
![](https://posit.co/wp-content/uploads/2022/10/thumbnail-3.jpg)
:::

::::

## Rのインストール

<https://cloud.r-project.org/>から自分のOSに合ったファイルをダウンロードして、インストール

（任意。本授業では情報処演習理室のパソコンを使う。）

## RStudioのインストール

<https://posit.co/download/rstudio-desktop/>から自分のOSに合ったファイルをダウンロードして、インストール

（任意。本授業では情報処演習理室のパソコンを使う。）

## ライブコーディング

- 本授業では、「ライブコーディング」を実施する

- 先生が打ったコードを**自分のパソコンで打ってください**
  - 自分が何をしているのか、理解するのが大事

- 何か分からなかったら、**赤い付箋をつけてください**

## RStudioの基本的な使い方

- 「R」というソフトではなく、「RStudio」を開くように気をつけてください

---

![](../images/r_vs_rstudio.png)

---

![](../images/rstudo_panel_ja.png)

## RStudioの基本的な使い方

- **コンソール**にRコードを打って、出力を確認する

- まずは電卓として使ってみる

## 電卓として使う

- `+` 足し算

- `-` 引き算

- `*` 掛け算

- `\`割り算

- `()`で演算の順次を変える

## エラーについて

- Rに認識されないコマンドを入力すると、エラーメッセージが返される

```{r}
#| error: true
3 % 9
```

## エラーについて

- もしエラーメッセージが表示されても、慌てないでください

- これは、コンピュータが指示された内容を理解できなかったか、実行できなかったという意味です

- 次のプロンプトで、別のコマンドを試してみましょう

## チャレンジ

- まずは任意の数を選んでください
  - 次に 2 を足す
  - 次に 3 を掛ける
  - 次に 6 を引く
  - 最後に 3 で割る

- 最初と最後の数を比べてください

## オブジェクトについて

- 計算結果を「オブジェクト」という入れ物に入れることができる

やり方：

```{r}
x <- 10
```

- `x`というオブジェクトに`10`が入りました

- `<-`を「代入文」または「割り当て文」と呼ぶ

## オブジェクトの確認

- オブジェクトの中身を確認したいときはオブジェクト名を打つか、右上の「Environment」パネルで確認

```{r}
x
```

## オブジェクトの確認

- 同じ名前で再度データを保存すると注意なしで上書きされる

```{r}
x <- 100
x
```

## オブジェクトを計算に使う

- オブジェクトは他の数字と同じように計算に使います：

```{r}
x + 50
```

## オブジェクトの名前

オブジェクトの名前は以下のルールがある：

- 文字から始めないといけない
- 文字、数字、`_`、`.`のみ使用できる

## オブジェクトの名前

分かりやすい（使いやすい）名前のおすすめ：

- 文字化けを防ぐために英字を使う

- Rは大文字と小文字を区別するため、一貫性を持たせる（大文字と小文字を混在させない）

- Tabキーによる自動補完機能があるので、名前の長さを気にしなくて良い

## 宿題のやり方

- 宿題は全部オンラインになっている

- ブラウザーの中でRコードを実行することによって答える

- 最後に完成コードが出るので、これをMoodleにコピペして、投稿

- 投稿する前に正しく答えられたかどうか確認できる

## 宿題のやり方（その１）

- 早速試してみましょう（今回は成績に影響しません）

<https://joelnitta.shinyapps.io/00-learnr/>

---

![](../images/tutorial-screenshot.png)

## 宿題のやり方（その２）

- 教室内のパソコンに宿題がインストールされているので、**ここで**受けることも可能です：
  - 右上の「環境」パネルに新しい「Tutorial」タブをクリック(1)
  - 受けたい宿題を探します（2）
  - 「Start Tutorial」をクリックするとブラウザ内でチュートリアルが始まります（3）

---

![](../images/tutorial-rstudio-screenshot.png)

---

- 注意：完成コードを提出する前に「Stop」ボタンをクリックすると、**今までの答えが消去される**ので気をつけてください。

![](../images/tutorial-stop.png)

## 宿題のした線について

宿題にこのようなところがあります：

```{r}
#| eval: false

# 計算
y <- ____
# 計算結果の確認
y
```

- `____`を**消してから**、コードを書いてください
  - 下線が残っているとエラーになってしまいます

## クイズについて

- 第二回（来週）以降、毎回クイズがある

- 今回学んだことについて(RとRStudio)

- スライドや宿題を復習してください

## 質問